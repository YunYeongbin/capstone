{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\capstone\\\\frontend\\\\src\\\\components\\\\RouterWeb.js\";\nimport { Routes, Route } from \"react-router-dom\";\nimport MainHeader from \"./MainHeader.js\";\nimport Home from \"../routes/Home.js\";\nimport MyProfile from \"../routes/MyProfile.js\";\nimport Auth from \"../routes/Auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RouterWeb(_ref) {\n  let {\n    isLoggedIn\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myprofile\",\n            element: /*#__PURE__*/_jsxDEV(MyProfile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 37\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 37\n          }, this)\n        }, void 0, false)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n_c = RouterWeb;\nexport default RouterWeb;\nvar _c;\n$RefreshReg$(_c, \"RouterWeb\");","map":{"version":3,"names":["Routes","Route","MainHeader","Home","MyProfile","Auth","jsxDEV","_jsxDEV","Fragment","_Fragment","RouterWeb","_ref","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/capstone/frontend/src/components/RouterWeb.js"],"sourcesContent":["import {Routes, Route} from \"react-router-dom\";\r\nimport MainHeader from \"./MainHeader.js\"\r\nimport Home from \"../routes/Home.js\"\r\nimport MyProfile from \"../routes/MyProfile.js\";\r\nimport Auth from \"../routes/Auth.js\";\r\n\r\nfunction RouterWeb({isLoggedIn}) {\r\n    return (\r\n            <div>\r\n                <MainHeader isLoggedIn={isLoggedIn}/>\r\n                <Routes>\r\n                    <>\r\n                        \r\n                        <Route path=\"/\" element={<Home />}/>\r\n                        {\r\n                            isLoggedIn ? (\r\n                                <>\r\n                                    <Route path=\"/myprofile\" element={<MyProfile/>}></Route>\r\n                                </>\r\n                            )\r\n                            : (\r\n                                <>\r\n                                    <Route path=\"/auth\" element={<Auth/>}></Route>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </>\r\n                </Routes>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RouterWeb;\r\n"],"mappings":";AAAA,SAAQA,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,SAASA,CAAAC,IAAA,EAAe;EAAA,IAAd;IAACC;EAAU,CAAC,GAAAD,IAAA;EAC3B,oBACQJ,OAAA;IAAAM,QAAA,gBACIN,OAAA,CAACL,UAAU;MAACU,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACrCV,OAAA,CAACP,MAAM;MAAAa,QAAA,eACHN,OAAA,CAAAE,SAAA;QAAAI,QAAA,gBAEIN,OAAA,CAACN,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEZ,OAAA,CAACJ,IAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,EAEhCL,UAAU,gBACNL,OAAA,CAAAE,SAAA;UAAAI,QAAA,eACIN,OAAA,CAACN,KAAK;YAACiB,IAAI,EAAC,YAAY;YAACC,OAAO,eAAEZ,OAAA,CAACH,SAAS;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAS,iBACzD,gBAGHV,OAAA,CAAAE,SAAA;UAAAI,QAAA,eACIN,OAAA,CAACN,KAAK;YAACiB,IAAI,EAAC,OAAO;YAACC,OAAO,eAAEZ,OAAA,CAACF,IAAI;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAS,iBAErD;MAAA;IAEN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAElB;AAACG,EAAA,GAxBQV,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}